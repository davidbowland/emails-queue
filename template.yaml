AWSTemplateFormatVersion: 2010-09-09
Description: >-
  emails-queue-service

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AccountId:
    Type: String
    Description: AWS account ID
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - test
    Description: Environment for deploy

Mappings:
  EnvironmentMap:
    prod:
      bucket: emails-service-storage
      domain: dbowland.com
    test:
      bucket: emails-service-storage-test
      domain: bowland.link

Resources:
  SimpleQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      KmsMasterKeyId: alias/aws/sqs
      MessageRetentionPeriod: 1209600 # 14 days
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60

  SQSPayloadProcessor:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      CodeUri: './dist'
      Description: Processes queued messages to send emails.
      Environment:
        Variables:
          DOMAIN: !FindInMap [EnvironmentMap, !Ref Environment, domain]
          EMAIL_BUCKET: !FindInMap [EnvironmentMap, !Ref Environment, bucket]
          EMAIL_REGION: us-east-1
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            BatchSize: 7
            Queue: !GetAtt SimpleQueue.Arn
      Handler: handlers/sqs-payload-processor.sqsPayloadProcessorHandler
      MemorySize: 128
      Policies:
        # Give Lambda basic execution Permission
        - AWSLambdaBasicExecutionRole
        # Grant access to S3 bucket
        - S3CrudPolicy:
            BucketName: !FindInMap [EnvironmentMap, !Ref Environment, bucket]
        # Grant access to SES identity
        - SESCrudPolicy:
            IdentityName: !FindInMap [EnvironmentMap, !Ref Environment, domain]
        # Grant access to SQS queue
        - SQSPollerPolicy:
            QueueName: !GetAtt SimpleQueue.QueueName
      Runtime: nodejs14.x
      Timeout: 60

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [SQSPayloadProcessor]
    Properties:
      LogGroupName: !Sub /aws/lambda/${SQSPayloadProcessor}
      RetentionInDays: 30

  ErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn: [LambdaLogGroup]
    Properties:
      FilterPattern: '[timestamp, uuid, level="ERROR", message]'
      LogGroupName: !Sub /aws/lambda/${SQSPayloadProcessor}
      MetricTransformations:
        - MetricValue: '1'
          MetricNamespace: dbowland
          MetricName: ErrorCount
